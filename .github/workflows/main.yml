name: Main Deploy Flow

on:
  workflow_dispatch:
    inputs:
      bundleName:
        type: choice
        description: 'The name of the deployment bundle to deploy'
        required: true
        options:
          - 'sandbox-test'
          - 'product-qa'
      command:
        type: choice
        description: 'Deployment action'
        required: true
        options:
          - 'deploy'
          - 'destroy'
      stackPassphrase:
        description: 'Stack passphrase'
        required: true
      runSetup:
        type: boolean
        description: 'Run setup'
        required: false
      runEnd2EndTests:
        type: boolean
        description: 'Run end to end tests'
        required: false
      connectAuthVersion:
        description: 'Connect Authentication version to deploy (if applicable)'
        required: false
      connectWorkflowVersion:
        description: 'Connect Workflow version to deploy (if applicable)'
        required: false
      connectConfigServiceVersion:
        description: 'Connect Configuration Service version to deploy (if applicable)'
        required: false
      cloudFlowVersion:
        description: 'CloudFlow version to deploy (if applicable)'
        required: false
      adminTasksVersion:
        description: 'Admin tasks version to run (if applicable)'
        required: false

env:
  AWS_REGION: eu-west-1
  GITHUB_TOKEN: ${{ secrets.CI_BOT_PAT }}
  PEPO: pepa

jobs:
  pulumi-preview:
    name: ${{ github.event.inputs.bundleName }}-preview
    if: ${{ github.event.inputs.command == 'deploy' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - run: printenv
  pulumi-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    needs: [pulumi-preview]
    if: |
      always() &&
      (needs.pulumi-preview.result == 'success' || needs.pulumi-preview.result == 'skipped')
    environment: super-duper-deploy
    steps:
      - run: printenv
      - name: Run preview script
        run: |
          printenv
        env:
          PEPO: paco
  post-deployment-setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    needs: [pulumi-deploy]
    if: ${{ github.event.inputs.command == 'deploy' && github.event.inputs.runSetup == 'true' }}
    steps:
      - run: printenv
  post-deployment-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    needs: [post-deployment-setup,pulumi-deploy]
    if: |
      always() && github.event.inputs.runEnd2EndTests == 'true' &&
      (needs.post-deployment-setup.result == 'success' || needs.post-deployment-setup.result == 'skipped') &&
      needs.pulumi-deploy.result == 'success'
    steps:
      - run: printenv